{
  "hash": "2142488f8f54affe7dc70356117b5868",
  "result": {
    "markdown": "------------------------------------------------------------------------\n\n------------------------------------------------------------------------\n\n\n---\ntitle: \"Penguins EDA\"\nformat:\n  html:\n    code-fold: true\n---\n\n\n## Penguin Size and Mass by Sex and Species\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# to do: add something that gets rid of the extra output\nlibrary(palmerpenguins)\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'dplyr'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n:::\n\n```{.r .cell-code}\nlibrary(ggplot2)\ndf <- palmerpenguins::penguins\nlibrary(vetiver)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncon<- DBI::dbConnect(duckdb::duckdb(), dbdir = \"my-db.duckdb\")\ncon\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n<duckdb_connection 9e0f0 driver=<duckdb_driver 8f720 dbdir='my-db.duckdb' read_only=FALSE bigint=numeric>>\n```\n:::\n\n```{.r .cell-code}\n#DBI::dbWriteTable(con, \"penguins\", palmerpenguins::penguins,append = TRUE)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf %>%\n  group_by(species, sex) %>%\n  summarise(\n    across(\n      where(is.numeric), \n      \\(x) mean(x, na.rm = TRUE)\n      )\n    ) %>%\n  knitr::kable()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'species'. You can override using the\n`.groups` argument.\n```\n:::\n\n::: {.cell-output-display}\n|species   |sex    | bill_length_mm| bill_depth_mm| flipper_length_mm| body_mass_g|     year|\n|:---------|:------|--------------:|-------------:|-----------------:|-----------:|--------:|\n|Adelie    |female |       37.25753|      17.62192|          187.7945|    3368.836| 2008.055|\n|Adelie    |male   |       40.39041|      19.07260|          192.4110|    4043.493| 2008.055|\n|Adelie    |NA     |       37.84000|      18.32000|          185.6000|    3540.000| 2007.000|\n|Chinstrap |female |       46.57353|      17.58824|          191.7353|    3527.206| 2007.971|\n|Chinstrap |male   |       51.09412|      19.25294|          199.9118|    3938.971| 2007.971|\n|Gentoo    |female |       45.56379|      14.23793|          212.7069|    4679.741| 2008.069|\n|Gentoo    |male   |       49.47377|      15.71803|          221.5410|    5484.836| 2008.066|\n|Gentoo    |NA     |       45.62500|      14.55000|          215.7500|    4587.500| 2008.400|\n:::\n:::\n\n\n## Penguin Size vs Mass by Species\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf %>%\n  ggplot(aes(x = bill_length_mm, y = body_mass_g, color = species)) +\n  geom_point() + \n  geom_smooth(method = \"lm\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 2 rows containing non-finite outside the scale range\n(`stat_smooth()`).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 2 rows containing missing values or values outside the scale range\n(`geom_point()`).\n```\n:::\n\n::: {.cell-output-display}\n![](eda_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# library(vetiver)\n# library(pins)\n# \n# # Connect to the board folder where the model is stored\n# board <- board_cache(\"/data/model\")\n# \n# # Load the model using VetiverModel\n# v <- VetiverModel$from_pin(board, \"penguin_model\", version = \"20230422T102952Z-cb1f9\")\n# \n# # Create a VetiverAPI object\n# vetiver_api <- VetiverAPI$new(v)\n# \n# # Access the app object from the VetiverAPI\n# api <- vetiver_api$app\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#vetiver_deploy_rsconnect(\n #   board = board, \n  #  name = \"c25julia.razzino/penguin\",\n   # predict_args = list(debug = TRUE),\n    #account = \"c25julia.razzino\"\n#)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#vetiver_prepare_docker(board = board, penguins)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#df %>%\n # group_by(species, sex) %>%\n  #summarise(\n   # across(\n    #    ends_with(\"mm\") | ends_with(\"g\"),\n     # \\(x) mean(x, na.rm = TRUE)\n      #)\n    #) %>%\n  #dplyr::collect() %>%\n  #knitr::kable()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#req <- httr2::request(\"http://127.0.0.1:8080/predict\") |>\n  #httr2::req_body_json(\n   # list(\n    #  list(\n     #   \"bill_length_mm\" = 0,\n      #  \"species_Chinstrap\" = FALSE,\n       # \"species_Gentoo\" = FALSE,\n        #\"sex_male\" = FALSE\n      #)\n    #)\n  #) |>\n  #httr2::req_perform()\n#res <- httr2::resp_body_json(req)$predict[[1]]\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nDBI::dbDisconnect(con, shutdown=TRUE)\n```\n:::\n",
    "supporting": [
      "eda_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}