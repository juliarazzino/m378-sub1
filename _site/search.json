[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Juliaâ€™s not-frustrating-at-all project",
    "section": "",
    "text": "This is my index page."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "eda.html#penguin-size-and-mass-by-sex-and-species",
    "href": "eda.html#penguin-size-and-mass-by-sex-and-species",
    "title": "Penguins EDA",
    "section": "Penguin Size and Mass by Sex and Species",
    "text": "Penguin Size and Mass by Sex and Species\n\n\nCode\n# to do: add something that gets rid of the extra output\nlibrary(palmerpenguins)\nlibrary(dplyr)\n\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n\nCode\nlibrary(ggplot2)\ndf &lt;- palmerpenguins::penguins\nlibrary(vetiver)\n\n\n\n\nCode\ncon&lt;- DBI::dbConnect(duckdb::duckdb(), dbdir = \"my-db.duckdb\")\ncon\n\n\n&lt;duckdb_connection 9e0f0 driver=&lt;duckdb_driver 8f720 dbdir='my-db.duckdb' read_only=FALSE bigint=numeric&gt;&gt;\n\n\nCode\n#DBI::dbWriteTable(con, \"penguins\", palmerpenguins::penguins,append = TRUE)\n\n\n\n\nCode\ndf %&gt;%\n  group_by(species, sex) %&gt;%\n  summarise(\n    across(\n      where(is.numeric), \n      \\(x) mean(x, na.rm = TRUE)\n      )\n    ) %&gt;%\n  knitr::kable()\n\n\n`summarise()` has grouped output by 'species'. You can override using the\n`.groups` argument.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nspecies\nsex\nbill_length_mm\nbill_depth_mm\nflipper_length_mm\nbody_mass_g\nyear\n\n\n\n\nAdelie\nfemale\n37.25753\n17.62192\n187.7945\n3368.836\n2008.055\n\n\nAdelie\nmale\n40.39041\n19.07260\n192.4110\n4043.493\n2008.055\n\n\nAdelie\nNA\n37.84000\n18.32000\n185.6000\n3540.000\n2007.000\n\n\nChinstrap\nfemale\n46.57353\n17.58824\n191.7353\n3527.206\n2007.971\n\n\nChinstrap\nmale\n51.09412\n19.25294\n199.9118\n3938.971\n2007.971\n\n\nGentoo\nfemale\n45.56379\n14.23793\n212.7069\n4679.741\n2008.069\n\n\nGentoo\nmale\n49.47377\n15.71803\n221.5410\n5484.836\n2008.066\n\n\nGentoo\nNA\n45.62500\n14.55000\n215.7500\n4587.500\n2008.400"
  },
  {
    "objectID": "eda.html#penguin-size-vs-mass-by-species",
    "href": "eda.html#penguin-size-vs-mass-by-species",
    "title": "Penguins EDA",
    "section": "Penguin Size vs Mass by Species",
    "text": "Penguin Size vs Mass by Species\n\n\nCode\ndf %&gt;%\n  ggplot(aes(x = bill_length_mm, y = body_mass_g, color = species)) +\n  geom_point() + \n  geom_smooth(method = \"lm\")\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: Removed 2 rows containing non-finite outside the scale range\n(`stat_smooth()`).\n\n\nWarning: Removed 2 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\nCode\n# library(vetiver)\n# library(pins)\n# \n# # Connect to the board folder where the model is stored\n# board &lt;- board_cache(\"/data/model\")\n# \n# # Load the model using VetiverModel\n# v &lt;- VetiverModel$from_pin(board, \"penguin_model\", version = \"20230422T102952Z-cb1f9\")\n# \n# # Create a VetiverAPI object\n# vetiver_api &lt;- VetiverAPI$new(v)\n# \n# # Access the app object from the VetiverAPI\n# api &lt;- vetiver_api$app\n\n\n\n\nCode\n#vetiver_deploy_rsconnect(\n #   board = board, \n  #  name = \"c25julia.razzino/penguin\",\n   # predict_args = list(debug = TRUE),\n    #account = \"c25julia.razzino\"\n#)\n\n\n\n\nCode\n#vetiver_prepare_docker(board = board, penguins)\n\n\n\n\nCode\n#df %&gt;%\n # group_by(species, sex) %&gt;%\n  #summarise(\n   # across(\n    #    ends_with(\"mm\") | ends_with(\"g\"),\n     # \\(x) mean(x, na.rm = TRUE)\n      #)\n    #) %&gt;%\n  #dplyr::collect() %&gt;%\n  #knitr::kable()\n\n\n\n\nCode\n#req &lt;- httr2::request(\"http://127.0.0.1:8080/predict\") |&gt;\n  #httr2::req_body_json(\n   # list(\n    #  list(\n     #   \"bill_length_mm\" = 0,\n      #  \"species_Chinstrap\" = FALSE,\n       # \"species_Gentoo\" = FALSE,\n        #\"sex_male\" = FALSE\n      #)\n    #)\n  #) |&gt;\n  #httr2::req_perform()\n#res &lt;- httr2::resp_body_json(req)$predict[[1]]\n\n\n\n\nCode\nDBI::dbDisconnect(con, shutdown=TRUE)"
  },
  {
    "objectID": "model.html",
    "href": "model.html",
    "title": "Model",
    "section": "",
    "text": "Code\nfrom palmerpenguins import penguins\nfrom pandas import get_dummies\nimport numpy as np\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn import preprocessing\nimport duckdb\nfrom palmerpenguins import penguins\nfrom vetiver import VetiverAPI\nfrom vetiver import VetiverModel\nimport requests"
  },
  {
    "objectID": "model.html#get-data",
    "href": "model.html#get-data",
    "title": "Model",
    "section": "Get Data",
    "text": "Get Data\n\n\nCode\ndf = penguins.load_penguins().dropna()\n\ndf.head(3)\n\n\n\n\n\n\n\n\n\nspecies\nisland\nbill_length_mm\nbill_depth_mm\nflipper_length_mm\nbody_mass_g\nsex\nyear\n\n\n\n\n0\nAdelie\nTorgersen\n39.1\n18.7\n181.0\n3750.0\nmale\n2007\n\n\n1\nAdelie\nTorgersen\n39.5\n17.4\n186.0\n3800.0\nfemale\n2007\n\n\n2\nAdelie\nTorgersen\n40.3\n18.0\n195.0\n3250.0\nfemale\n2007\n\n\n\n\n\n\n\n\n\nCode\ncon = duckdb.connect('my-db.duckdb')\ndf = con.execute(\"SELECT * FROM penguins\").fetchdf().dropna()"
  },
  {
    "objectID": "model.html#define-model-and-fit",
    "href": "model.html#define-model-and-fit",
    "title": "Model",
    "section": "Define Model and Fit",
    "text": "Define Model and Fit\n\n\nCode\nX = get_dummies(df[['bill_length_mm', 'species', 'sex']], drop_first = True)\ny = df['body_mass_g']\n\nmodel = LinearRegression().fit(X, y)"
  },
  {
    "objectID": "model.html#get-some-information",
    "href": "model.html#get-some-information",
    "title": "Model",
    "section": "Get some information",
    "text": "Get some information\n\n\nCode\nprint(f\"R^2 {model.score(X,y)}\")\nprint(f\"Intercept {model.intercept_}\")\nprint(f\"Columns {X.columns}\")\nprint(f\"Coefficients {model.coef_}\")\n\n\nR^2 0.8555368759537614\nIntercept 2169.2697209393973\nColumns Index(['bill_length_mm', 'species_Chinstrap', 'species_Gentoo', 'sex_male'], dtype='object')\nCoefficients [  32.53688677 -298.76553447 1094.86739145  547.36692408]"
  }
]